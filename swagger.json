{
  "swagger": "2.0",
  "info": {
    "description": "Ini adalah repository RESTful API yang menjadi basis untuk teman-teman berkreasi di challenge chapter 8. Ikuti petunjuk di bawah dengan seksama untuk memastikan teman-teman dapat menjalankan RESTful API.",
    "version": "1.0.0",
    "title": "Chapter 8 - Challenge",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/api/v1/",
  "tags": [
    {
      "name": "players",
      "description": "Everything about Player"
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/players": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "List all of Player",
        "description": "description all about player",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "example": 1
                  },
                  "username": {
                    "type": "string",
                    "example": "PussySlayer613"
                  },
                  "email": {
                    "type": "string",
                    "example": "pussy.slay3r@gmail.com"
                  },
                  "password": {
                    "type": "string"
                  },
                  "experience": {
                    "type": "integer"
                  },
                  "lvl": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "players"
        ],
        "summary": "Add new player",
        "description": "Create new player",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Player object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "experiance": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "result": {
                  "type": "string",
                  "example": "Success"
                }
              }
            }
          }
        }
      }
    },
    "/players/{playerId}": {
      "get": {
        "tags": [
          "players"
        ],
        "summary": "Find player by ID",
        "description": "Return a single player",
        "operationId": "getPlayerById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID of Player to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "username": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "experience": {
                    "type": "integer"
                  },
                  "lvl": {
                    "type": "integer"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "result": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Player with ${id} not found"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "players"
        ],
        "summary": "Update player by ID",
        "description": "Update a single player",
        "operationId": "updatePlayer",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID of Player to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated player object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "experiance": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Player with id ${id} successfully updated"
                }
              }
            }
          },
          "404": {
            "description": "Player not found",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "result": {
                  "type": "string",
                  "example": "Not Found"
                },
                "message": {
                  "type": "string",
                  "example": "Player with ${id} not found"
                }
              }
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "result": {
                  "type": "string",
                  "example": "Failed"
                },
                "message": {
                  "type": "string",
                  "example": "Failed to update"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "players"
        ],
        "summary": "Delete a player",
        "description": "Deletes a player of game",
        "operationId": "deletePlayer",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "playerId",
            "in": "path",
            "description": "Player id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "result": {
                  "type": "string",
                  "example": "success"
                },
                "message": {
                  "type": "string",
                  "example": "Player with ${id}, was deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot delete Player with id=${id}. Maybe Player was not found!"
                }
              }
            }
          }
        }
      }
    },
    "/players/exp/{playerId}": {
      "post": {
        "tags": [
          "players"
        ],
        "summary": "update exp player",
        "description": "Update Exp player",
        "parameters": [
          {
            "name": "playerId",
            "in": "path",
            "description": "ID of Player to update",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "exp",
            "description": "Exp Player object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "experiance": {
                  "type": "integer"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "result": {
                  "type": "string",
                  "example": "Player with id = ${id} gain ${exp} experience. Total experience = ${player.experience}"
                }
              }
            }
          },
          "400": {
            "description": "Failed",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "result": {
                  "type": "string",
                  "example": "FAILED"
                },
                "message": {
                  "type": "string",
                  "example": "Cannot update Player with id=${id}!"
                }
              }
            }
          }
        }
      }
    }
  }
}